# # Задача из объясения симплекс-метода min [чётко]
# [-2, -1, -3, -1],
# [1,  2,  5,-1, 4],
# [1, -1, -1, 2, 1],
# [0, 0, 1, 1]
from enum import Enum
from fractions import Fraction

from symplex_logic import SymplexLogic
from task_config import ExtremumType

# # № 3.1 min [чётко]
# [-1, 2, -1],
# [1, 4, 1, 5],
# [1, -2, -1, -1],
# [1, 1, 0]

# # № 3.2 min [чётко]
# [-1, -1, -1],
# [-1, 1, 1, 2],
# [3, -1, 1, 0],
# [1, 1, 0]

# # № 3.3 min [чётко]
# [-2, -1, 3, 1],
# [1, 2, 5, -1, 4],
# [1, -1, -1, 2, 1],
# [1, 1, 0, 0]

# # № 3.4 min [чётко]
# [-6, -1, -4, -5],
# [3, 1, -1, 1, 4],
# [5, 1, 1, -1, 4],
# [0, 1, 1, 0]

# # № 3.4 min [чётко]
# [-1, -2, -3, 1],
# [1, -3, -1, -2, -4],
# [1, -1, 1, 0, 0],
# [1, 1, 0, 0]

# # № 3.7 min [чётко]
# [-1, -1, -1, -1],
# [1, 3, 1, 2, 5],
# [2, 0, -1, 1, 1],
# [0, 0, 1, 1]

# № 3.10 min [чётко]
# [1, 3, 2, 4, -2],
# [-1, 0, 1, -2, -2, -2],
# [0, 1, -1, 1, -2, 0],
# [2, 1, 0, 5, 1, 7],
# [1, 1, 1, 0, 0]

# # № 3.12 у Ратушина max [чётко]
#     [3, -2, 1, 3, 3],
#     [2, -1, 1, 1, 1, 2],
#     [-4, 3, -1, -1, -3, -4],
#     [3, 2, 3, 5, 0, 3],
#     [0, 1, 1, 1, 0]

# # Из разбора Иск базиса [min] - чётко
#     [-2, -1, -3, -1],
#     [1, 2, 5, -1, 4],
#     [1, -1, -1, 2, 1],
#     [0, 0, 0, 0]

# 4.1 Иск базис [min] - чётко
#     [-1, -4, -1],
#     [1, -1, 1, 3],
#     [2, -5, -1, 0],
#     [0, 0, 0]

# # 4.2 Иск базис [min] - чётко
#     [-1, 10, -1],
#     [-1, 5, 7, 13],
#     [1, 14.5, 7, 15],
#     [0, 0, 0]

# # 4.3 Иск базис [min]
#     [-1, -2, -3, 4],
#     [1, 1, -1, 1, 2],
#     [1, 14, 10, -10, 24],
#     [0, 0, 0, 0]

# # 4.4 Иск базис [min]
#     [-1, 4, -3, -10],
#     [1, 1, -1, 1, 0],
#     [1, 14, 10, -10, 11],
#     [0, 0, 0, 0]

# # 5.173
# [1, -4, 1, 1, 1, 1],
# [14, -14, 12, 5, 6, 3, 8],
# [1, -1, 2, 0, 1, 0, 0],
# [16, -16, 8, 7, 4, 5, 12],
# [0, 0, 0, 0, 0, 0]

available_support_elements = []
sorted_available_support_elements = sorted(available_support_elements, key=lambda x: x[1])
print(sorted_available_support_elements)